generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Team {
  id               Int                @id @default(autoincrement())
  name             String
  users            User[]
  gameChallengeTip GameChallengeTip[]
}

model User {
  id         Int          @id @default(autoincrement())
  name       String
  polls      Poll[]
  team       Team?        @relation(fields: [teamId], references: [id])
  teamId     Int?
  GamePoints GamePoints[]
}

model PollOption {
  id     Int    @id @default(autoincrement())
  option String
  polls  Poll[]
}

model Poll {
  id           Int        @id @default(autoincrement())
  userId       Int        @unique
  user         User       @relation(fields: [userId], references: [id])
  pollOptionId Int
  option       PollOption @relation(fields: [pollOptionId], references: [id])
}

model GameMode {
  id            Int             @id @default(autoincrement())
  name          String
  games         Game[]
  gameChallenge GameChallenge[]
}

model GameChallengeTip {
  id              Int           @id @default(autoincrement())
  gameChallenge   GameChallenge @relation(fields: [gameChallengeId], references: [id])
  gameChallengeId Int
  team            Team          @relation(fields: [teamId], references: [id])
  teamId          Int
  tip             String
}

model GameChallenge {
  id               Int                @id @default(autoincrement())
  gameMode         GameMode           @relation(fields: [gameModeId], references: [id])
  gameModeId       Int
  answer           String
  game             Game[]
  gameChallengeTip GameChallengeTip[]
  GamePoints       GamePoints[]
}

model GamePoints {
  id          Int           @id @default(autoincrement())
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  challenge   GameChallenge @relation(fields: [challengeId], references: [id])
  challengeId Int
}

model Game {
  id                 Int            @id @default(autoincrement())
  active             Boolean
  gameMode           GameMode?      @relation(fields: [gameModeId], references: [id])
  gameModeId         Int?
  currentChallenge   GameChallenge? @relation(fields: [currentChallengeId], references: [id])
  currentChallengeId Int?
}
